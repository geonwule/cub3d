1. goal
이 프로젝트의 목표는 이번 해 첫 해의 목표와 유사합니다
: 엄격성, C 언어 사용, 기본 알고리즘 사용, 정보 조사 등입니다.
그래픽 디자인 프로젝트로서, cub3D는 윈도우, 색상, 이벤트, 도형 채우기 등이라는 영역에서 \
여러분의 기술을 향상시킬 것입니다.
결론적으로, cub3D는 구체적인 내용을 이해하지 않고도 \
수학의 놀이적인 실제 응용을 탐구할 수 있는 훌륭한 놀이터입니다.
인터넷에서 제공되는 다양한 문서들의 도움을 받아, \
여러분은 수학을 우아하고 효율적인 알고리즘을 생성하는 도구로 활용할 것입니다.
이 프로젝트를 시작하기 전에 원래 게임을 테스트하는 것을 권장합니다.
http://users.atw.hu/wolf3d/

제4장 - 필수 파트: cub3D

프로그램 이름: cub3D
제출할 파일: 모든 파일
Makefile 명령어: all, clean, fclean, re, bonus

외부 함수:
• open, close, read, write,
printf, malloc, free, perror,
strerror, exit
• 수학 라이브러리의 모든 함수들 (-lm man man 3 math)
• MinilibX의 모든 함수들

Libft 허용 여부: 예

설명: 이 프로그램은 미로 안의 실제적인 3D 그래픽 표현을 제공해야 합니다. \
이를 위해 Ray-Casting 원리를 사용하여 이 표현을 생성해야 합니다.

다음은 제약 사항입니다:
• 반드시 miniLibX를 사용해야 합니다. \
운영 체제에서 제공되는 버전 또는 소스로부터 사용할 수 있습니다. \
소스로 작업하기로 선택한 경우, \
libft에 대해 Common Instructions 부분에서 설명한 규칙을 동일하게 적용해야 합니다.
• 창의 관리는 부드러워야 합니다. 다른 창으로 전환하거나 최소화하는 등의 작업이 가능해야 합니다.
• 벽의 텍스처를 다르게 표시해야 합니다 (선택은 여러분에게 달려 있습니다). \
벽이 향하는 방향에 따라 다른 텍스처를 표시해야 합니다 (북쪽, 남쪽, 동쪽, 서쪽).
• 프로그램은 바닥과 천장 색상을 서로 다른 색으로 설정할 수 있어야 합니다.
• 프로그램은 다음 규칙을 준수하며 이미지를 창에 표시해야 합니다:
◦ 키보드의 왼쪽 및 오른쪽 화살표 키는 미로에서 왼쪽 및 오른쪽으로 바라볼 수 있어야 합니다.
◦ W, A, S, D 키는 시점을 미로를 통해 이동시킬 수 있어야 합니다.
◦ ESC 키를 누르면 창이 닫히고 프로그램이 깔끔하게 종료되어야 합니다.
◦ 창 프레임의 빨간 십자가를 클릭하면 창이 닫히고 프로그램이 깔끔하게 종료되어야 합니다.
◦ minilibX의 이미지 사용을 강력히 권장합니다.
• 프로그램은 .cub 확장자를 가진 씬 설명 파일을 첫 번째 인수로 받아야 합니다.
◦ 맵은 빈 공간을 나타내는 0, 벽을 나타내는 1, \
플레이어의 시작 위치와 생성 방향을 나타내는 N, S, E 또는 W의 6가지 문자로만 구성되어야 합니다.
다음은 유효한 간단한 맵의 예입니다:
111111
100101
101001
1100N1
111111
◦ 맵은 벽으로 둘러싸여야 합니다. 그렇지 않으면 프로그램은 오류를 반환해야 합니다.
◦ 맵 내용을 제외한 각 요소 유형은 한 개 이상의 빈 줄로 구분할 수 있습니다.
◦ 맵 내용을 제외한 요소 유형은 파일에서 어떤 순서로든 설정할 수 있습니다.
◦ 맵을 제외한 요소의 각 정보는 한 개 이상의 공백으로 구분할 수 있습니다.
◦ 맵은 파일에서 그대로 파싱되어야 합니다. 공백은 유효한 맵의 일부이며, \
여러분이 처리하는 방식에 달려 있습니다. \
맵의 규칙을 준수한다면 어떤 종류의 맵도 파싱할 수 있어야 합니다.

◦ 각 요소(맵 제외)의 첫 번째 정보는 타입 식별자로 구성됩니다 (한 개 또는 두 개의 문자).
그 후에는 다음과 같은 엄격한 순서로 각 객체의 모든 구체적인 정보가 따라옵니다:

∗ 북쪽 텍스처:
NO ./path_to_the_north_texture
· 식별자: NO
· 북쪽 텍스처 경로

∗ 남쪽 텍스처:
SO ./path_to_the_south_texture
· 식별자: SO
· 남쪽 텍스처 경로

∗ 서쪽 텍스처:
WE ./path_to_the_west_texture
· 식별자: WE
· 서쪽 텍스처 경로

∗ 동쪽 텍스처:
EA ./path_to_the_east_texture
· 식별자: EA
· 동쪽 텍스처 경로

∗ 바닥 색상:
F 220,100,0
· 식별자: F
· R,G,B 값 범위 [0,255]: 0, 255, 255

∗ 천장 색상:
C 225,30,0
· 식별자: C
· R,G,B 값 범위 [0,255]: 0, 255, 255

◦ 간소화된 .cub 씬 예제를 사용한 필수 파트의 예:
NO ./path_to_the_north_texture
SO ./path_to_the_south_texture
WE ./path_to_the_west_texture
EA ./path_to_the_east_texture
F 220,100,0
C 225,30,0
        1111111111111111111111111
        1000000000110000000000001
        1011000001110000000000001
        1001000000000000000000001
111111111011000001110000000000001
100000000011000001110111111111111
11110111111111011100000010001
11110111111111011101010010001
11000000110101011100000010001
10000000000000001100000010001
10000000000000001101010010001
11000001110101011111011110N0111
11110111 1110101 101111010001
11111111 1111111 111111111111

◦ 파일에서 어떤 종류의 구성 오류가 발생하더라도 프로그램은 정상적으로 종료되어야 하며
"Error\n" 다음에 여러분이 선택한 명시적인 오류 메시지를 반환해야 합니다.









